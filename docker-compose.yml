services:
  backend:
    build: .
    container_name: django
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env.example
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      - db
      - redis

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    
  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "8001:8001" 
    depends_on:
      - redis

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
     - '5000:80'
     - '25:25'
     - '143:143'
    volumes:
     - smtp4dev-data:/smtp4dev
    environment:
     - ServerOptions__Urls=https://*:80
     - ServerOptions__HostName=smtp4dev
     
  db:
    image: postgres:latest
    container_name: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.example
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - .env.example
    ports:
      - "5050:80"
    

volumes:
  smtp4dev-data:
  postgres_data: